第8课 正则表达式


1.简介
	正则表达式就是符合一定规则的表达式。
	操作字符串，可以用一些特殊的符号表示一些代码。
    好处：可以简化对字符串的复杂操作。弊端：符号定义越多，正则越长，阅读性越差

    正则表达式的功能：匹配、切割、替换、获取

    grep ：文本过滤（基本）
    egrep：通过扩展正则过滤。
    fgrep：快速grep

    awk：文本处理
    sed ：从输入中读取信息，经过编辑后输出。

grep命令
grep命令
语法格式：  grep [options ...] pattern-spec [files ...]
用途：匹配一个或多个模式的文本行。
options:
-E : 使用扩展正则表达式进行匹配， grep -E 或取代 egrep 命令。
-F : 使用固定字符串进行匹配， grep -F 或取代传统的fgrep命令。
-e : 通常第一个非选项的参数认为是要匹配的模式，也可以同时提供多个模式，只要将其放入单引号，并用换行字符分隔他们。
　　模式以减号开头时，为防止混淆其为选项，-e选项说明其后的参数为模式，即使他以减号开头。
-f : 从pat-file文件读取模式作为匹配。
-i : 模式匹配时忽略大小写差异。
-l : 列出匹配模式的文件名称，而不是打印匹配的行。
-q : 静默的，如果匹配成功，不将匹配的行输出到标准输出；否则即是不成功。
-s : 不显示错误信息，通常与-q并用。
-v : 显示不匹配模式的行。
说明：可以同时查找多个文件中的内容，当指定多个文件时，每个显示出的文件行前会有文件名加一个冒号标识其来自哪个文件。
可以使用多个-e 或 -f 选项，建立要查找的模式列表。

2.组成
	普通字符：普通字符串，没有特殊含义，
	特殊字符：在正则表达式中具有特殊的含义。

正则表达式中的常见meta字符
POSIX BRE与ERE中都有的meta字符:
\   :  通常用于打开或关闭后续字符的特殊含义，如\(...\)与\{...\}
.   :   匹配任何单个字符（除NUL）
*  :   匹配其前的任何数目或没有的单个字符，例： . 表示任一字符， 则 .* 匹配任一字符的任意长度
^  :   匹配紧接着的正则表达式，BRE中仅在正则表达式的开头有特殊的含义，ERE中在任何位置都有特殊含义
$  :   匹配前面的正则表达式，在字符串或者行结尾处。BRE中仅在正则表达式的结尾处有特殊的含义，ERE中在任何位置都有特殊含义
[]  :   匹配方括号内的任一字符，其中可用连字符（-）指的连续字符的范围；^符号苦出现在方括号的第一个位置，则表示匹配不在列表中的任一字符，

? 匹配字表达式零次或一次。

_________________________________
POSIX BRE(普通正则)中才有的字符：

\{n,m\} : 区间表达式，匹配在它前面的单个字符重现的次数区别。\{n\}指重现n次;\{n,m\}指重现n至m次;
\( \) : 保留空间，可以将最多9个独立的子模式存储在单个模式中。如\(ab\).*\1 : 指匹配ab组合的两次重现，中间可存在任意数目的字符。
\n : 重复在\(与\)方括号内第n个子模式至此点的模式。

_________________________________
POSIX ERE(扩展正则)中才有的字符：
{n,m} : 与BRE的\{n,m\}功能相同
+ : 匹配前面正则表达式的一个或多个扩展
? : 匹配前面正则表达式的零个或一个扩展
| : 匹配|符号前或后的正则表达式
( ) : 匹配方括号括起来的正则表达式群
_________________________________

简单正规表达式匹配案例
china  :  匹配此行中任意位置有china字符的行
^china : 匹配此以china开关的行
china$ : 匹配以china结尾的行
^china$ : 匹配仅有china五个字符的行
[Cc]hina : 匹配含有China或china的行
Ch.na : 匹配包含Ch两字母并且其后紧跟一个任意字符之后又有na两个字符的行
Ch.*na : 匹配一行中含Ch字符，并且其后跟0个或者多个字符，再继续跟na两字符

[1234] 匹配1,2,3,4中的一个
[1-9] 数字1-9中的一个
[A-Za-z] 所有字母
[^0-9] 一个非数字的字符
A\{2\}B 匹配AAB
A\{4,\}B 匹配A出现至少4次B
A\{2,4\}B 匹配A出现在2至4次之间

